// behavior-specific key pairs have the following syntax:
//
// <keyname> string "<default_string>" ? help_text
// <keyname> value <default> <min> <max> <slow_spin> <fast_spin> ? help_text
//
// min, max, slow_spin, and fast_spin must be integers

// keys for curious should be placed in type_idle

type_idle
{
	idle
	{
		sound_awareness	value	100 0 100 1 10	? percent chance to notice a sound within half the sound's range, fades to zero outside range
		noticescale	value	100 1 500 5 10	? multiplier in time to notice an enemy (default 100, half as big notices twice as fast)
		fixedleash	value	0 0 1 1 1	? if non-zero, the leash will never auto-reset; if zero, the leash may auto-reset
		enemysharerange	value	0 0 16384 16 256 ? sets the range outside which the AI will not receive notification that a teammate has a new enemy
		voicetype	string "" ? letter for the AI's voice type; leave blank for a random voice each map
	}

	patrol
	{
		patrolpath	string	""		? name of a pathnode or waypoint to use as the patrol path
		waittrigger value 0 0 1 1 1		? set to 1 to wait until triggered
		sound_awareness	value	100 0 100 1 10	? percent chance to notice a sound within half the sound's range, fades to zero outside range
		noticescale	value	100 1 500 5 10	? multiplier in time to notice an enemy (default 100, half as big notices twice as fast)
		fixedleash	value	0 0 1 1 1	? if non-zero, the leash will never auto-reset; if zero, the leash may auto-reset
		enemysharerange	value	0 0 16384 16 256 ? sets the range outside which the AI will not receive notification that a teammate has a new enemy
		voicetype	string "" ? letter for the AI's voice type; leave blank for a random voice each map
	}

	runner
	{
		patrolpath	string	""		? name of a pathnode or waypoint to use as the patrol path
		waittrigger value 0 0 1 1 1		? set to 1 to wait until triggered
		sound_awareness	value	100 0 100 1 10	? percent chance to notice a sound within half the sound's range, fades to zero outside range
		noticescale	value	100 1 500 5 10	? multiplier in time to notice an enemy (default 100, half as big notices twice as fast)
		fixedleash	value	0 0 1 1 1	? if non-zero, the leash will never auto-reset; if zero, the leash may auto-reset
		enemysharerange	value	0 0 16384 16 256 ? sets the range outside which the AI will not receive notification that a teammate has a new enemy
		voicetype	string "" ? letter for the AI's voice type; leave blank for a random voice each map
	}

	machinegunner
	{
		turret string ""			? name of turret being used
		sound_awareness	value	100 0 100 1 10	? percent chance to notice a sound within half the sound's range, fades to zero outside range
		noticescale	value	100 1 500 5 10	? multiplier in time to notice an enemy (default 100, half as big notices twice as fast)
		fixedleash	value	0 0 1 1 1	? if non-zero, the leash will never auto-reset; if zero, the leash may auto-reset
		enemysharerange	value	0 0 16384 16 256 ? sets the range outside which the AI will not receive notification that a teammate has a new enemy
		voicetype	string "" ? letter for the AI's voice type; leave blank for a random voice each map
	}

	balcony_idle
	{
		sound_awareness	value	100 0 100 1 10	? percent chance to notice a sound within half the sound's range, fades to zero outside range
		noticescale	value	100 1 500 5 10	? multiplier in time to notice an enemy (default 100, half as big notices twice as fast)
		fixedleash	value	0 0 1 1 1	? if non-zero, the leash will never auto-reset; if zero, the leash may auto-reset
		enemysharerange	value	0 0 16384 16 256 ? sets the range outside which the AI will not receive notification that a teammate has a new enemy
		voicetype	string "" ? letter for the AI's voice type; leave blank for a random voice each map
		balconyheight value 128 0 1024 16 64 ? minimum height AI must fall to do a balcony death
	}
}

type_attack
{
	turret
	{
		accuracy value 20 0 100 1 10 ? percent chance to hit 
		ammo_grenade value 0 0 4 1 1 ? number of grenades the guy starts with
	}

	cover
	{
		accuracy value 20 0 100 1 10 ? percent chance to hit 
		ammo_grenade value 0 0 4 1 1 ? number of grenades the guy starts with
	}

	alarm
	{
		alarmnode string "" ? name of entity to use as alarm node
		alarmthread string "" ? thread to call when actor reaches alarm node
		accuracy value 20 0 100 1 10 ? percent chance to hit 
		ammo_grenade value 0 0 4 1 1 ? number of grenades the guy starts with
	}

	machinegunner
	{
		turret string "" ? name of turret being used
		accuracy value 100 0 100 1 10 ? percent chance to hit 
		ammo_grenade value 0 0 4 1 1 ? number of grenades the guy starts with
	}

	balcony_attack
	{
		accuracy value 100 0 100 1 10 ? percent chance to hit 
		ammo_grenade value 0 0 4 1 1 ? number of grenades the guy starts with
	}

	weaponless
	{
		ammo_grenade value 0 0 4 1 1 ? number of grenades the guy starts with
	}
}

type_disguise
{
	salute
	{
		disguise_range	value	256 32 16384 32 128	? maximum distance AI can be for them to do disguise behavior
		disguise_period	value	15 1 3600 1 10		? minimum time between repititions of disguise behavior
	}

	sentry
	{
		disguise_range	value	256 32 16384 32 128	? maximum distance AI can be for them to do disguise behavior
		disguise_accept_thread	string	""			? thread to call when actor reaches alarm node
		disguise_period	value	15 1 3600 1 10		? minimum time between repititions of disguise behavior
		disguise_level value	1 1 2 1 1			? level of papers required for success
	}

	officer
	{
		disguise_range	value	256 32 16384 32 128	? maximum distance AI can be for them to do disguise behavior
		disguise_period	value	15 1 3600 1 10		? minimum time between repititions of disguise behavior
	}

	rover
	{
		disguise_range	value	256 32 16384 32 128	? maximum distance AI can be for them to do disguise behavior
		disguise_period	value	15 1 3600 1 10		? minimum time between repititions of disguise behavior
	}

	none
	{
	}

	machinegunner
	{
	}

	balcony_disguise
	{
	}
}

type_grenade
{
	grenade
	{
		gren_awareness	value	10 0 100 1 10	? chance that an AI will notice a grenade when they can see it
	}

	machinegunner
	{
	}

	balcony_grenade
	{
	}
}
